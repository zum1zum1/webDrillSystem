/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.13
 * Generated at: 2017-07-16 08:15:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.students;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import beans.Question;
import beans.History;

public final class questionAnswerEdit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("beans.Question");
    _jspx_imports_classes.add("beans.History");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");

	Question question = (Question) request.getAttribute("Question");
	History history = (History) request.getAttribute("History");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>問題</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./navbar.jsp", out, true);
      out.write("\r\n");
      out.write("\t<p align=\"center\">\r\n");
      out.write("\t\t<FONT color=\"#000000\" size=\"6\">解答を変更する</FONT><br>\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<form action=\"./historyUpdateServlet\">\r\n");
      out.write("\t\t");

	out.println("<table class='table table-striped table-bordered'>");
	out.println("<tr>");
	out.println("<td>");
	out.println("問題番号");

	out.println("</td>");
	out.println("<td>");	
	out.println(question.getQuestionId());
	out.println("</td>");
	out.println("<input type='hidden' name='questionId' value='"+question.getQuestionId()+"'>");
	out.println("</tr>");
	
	out.println("<tr>");
	out.println("<td>");
	out.println("見出し");
	out.println("</td>");
	out.println("<td>");
	out.println(question.getQuestionHeadline());
	out.println("</td>");
	out.println("</tr>");
	
	out.println("<tr>");
	out.println("<td>");
	out.println("問題文");
	out.println("</td>");
	out.println("<td>");
	out.println(question.getQuestionText());
	out.println("</td>");
	out.println("</tr>");
	if(history.getUserAnswer()==1){
		out.println("<tr>");
		out.println("<td>");
		out.println("解答①");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice1());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='1' checked></font>");
		out.println("</td>");
		out.println("</tr>");
	
		out.println("<tr>");
		out.println("<td>");
		out.println("解答②");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice2());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='2'></font>");
		out.println("</td>");
		out.println("</tr>");
	
		out.println("<tr>");
		out.println("<td>");
		out.println("解答③");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice3());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='3'></font>");
		out.println("</td>");
		out.println("</tr>");
		out.println("</table>");
	}else if(history.getUserAnswer()==2){
		out.println("<tr>");
		out.println("<td>");
		out.println("解答①");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice1());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='1'></font>");
		out.println("</td>");
		out.println("</tr>");
		
		out.println("<tr>");
		out.println("<td>");
		out.println("解答②");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice2());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='2' checked></font>");
		out.println("</td>");
		out.println("</tr>");
		
		out.println("<tr>");
		out.println("<td>");
		out.println("解答③");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice3());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='3'></font>");
		out.println("</td>");
		out.println("</tr>");
		out.println("</table>");
	}else{
		out.println("<tr>");
		out.println("<td>");
		out.println("解答①");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice1());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='1'></font>");
		out.println("</td>");
		out.println("</tr>");
		
		out.println("<tr>");
		out.println("<td>");
		out.println("解答②");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice2());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='2'></font>");
		out.println("</td>");
		out.println("</tr>");
		
		out.println("<tr>");
		out.println("<td>");
		out.println("解答③");
		out.println("</td>");
		out.println("<td>");
		out.println(question.getChoice3());
		out.println("</td>");
		out.println("<td>");
		out.println("<input type='radio' name='answer' value='3' checked></font>");
		out.println("</td>");
		out.println("</tr>");
		out.println("</table>");
	}

      out.write("\r\n");
      out.write("\t\t<input type=\"submit\" class=\"btn btn-default\" value=\"答える！\" />\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
